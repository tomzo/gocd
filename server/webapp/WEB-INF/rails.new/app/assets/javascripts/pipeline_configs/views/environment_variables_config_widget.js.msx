/*
 * Copyright 2015 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

define([
  'mithril', '../helpers/form_helper', '../helpers/mithril_component_mixins', '../helpers/tooltips'
], function (m, f, ComponentMixins, tt) {
  var EnvironmentVariablesConfigWidget = {
    controller: function (args) {
      this.args = args;
      ComponentMixins.ManagesCollection.call(this, {as: 'Variable'});
      ComponentMixins.HasViewModel.call(this);
    },

    view: function (ctrl) {
      return (
        <f.accordion accordionTitles={[
                        (
                          <span>Environment Variables<f.tooltip tooltip={{content: tt.environmentVariables.main}}/></span>
                        )
                     ]}
                     accordionKeys={['environment-variables']}
                     selectedIndex={ctrl.vmState('accordionSelectedIndex', m.prop(-1))}
                     class='environment-variables'>
          <div>
            {ctrl.map(function (variable) {
              return (
                <f.row class='environment-variable' data-variable-name={variable.name()} key={variable.uuid()}>
                  <f.column size={4}>
                    <f.row collapse={true}>
                      <f.column size={2} class='prefix-container'>
                        <span class="prefix"/>
                      </f.column>

                      <f.input model={variable}
                               attrName='name'
                               placeHolder='Name'
                               onchange={ctrl.changed.bind(ctrl)}
                               size={10}
                               end={true}/>
                    </f.row>
                  </f.column>
                  <f.input model={variable}
                           attrName='value'
                           placeHolder='Value'
                           onchange={ctrl.changed.bind(ctrl)}
                           type={variable.secure() ? 'password' : 'text'}
                           size={4}/>
                  <f.column size={1} end={true}>
                    {ctrl.removeLink.call(ctrl, variable)}
                  </f.column>
                </f.row>
              );
            })}
          </div>
        </f.accordion>
      );
    }
  };

  return EnvironmentVariablesConfigWidget;
});
